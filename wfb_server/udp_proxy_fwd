#!/usr/bin/python3
import socket
import struct

import click

@click.command()
@click.option('--mpkts', default=2048, help='udp max pkt size def: 2048')
@click.option('--ip_rx', default='127.0.0.1', help='ip of sorce stream def: 127.0.0.1')
@click.option('--port_rx', default=5600, help='port of source stream def: 5700')
@click.option('--ip_tx', default='127.0.0.1', help='ip of destination host def: 127.0.0.1')
@click.option('--port_tx', default=5680, help='first port of destination hosts def: 5680')
@click.option('--ptxn', default=1, help='numder of tx ports [port_tx+1...port_tx+n] def: 1')
@click.option('--rpn', default=1, help='numder of repeats for each tx ports def: 1')

def main(mpkts,ip_rx,port_rx,ip_tx,port_tx,ptxn,rpn):
    
    UDP_MAX_PKT_SIZE = mpkts
    UDP_IP_RX= ip_rx
    UDP_PORT_RX = port_rx

    udp_streams = []
    for i in range(ptxn):
        udp_streams.append({"ip": ip_tx, "port": port_tx + i})
    
    #--init--


    sock_tx = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)

    sock_rx = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
    sock_rx.bind((UDP_IP_RX, UDP_PORT_RX))

    print("udp_proxy_fwd started...")
    print(f"rx: {UDP_IP_RX} : {UDP_PORT_RX}")

    for udp_stream in udp_streams:
        print(f'tx: {udp_stream["ip"]} : {udp_stream["port"]}')
    
    print(f"rpn: {rpn}")

    while True:
        
        data, addr = sock_rx.recvfrom(UDP_MAX_PKT_SIZE)
        PACKET_SIZE = len(data)

        for udp_stream in udp_streams:
            for k in range(rpn):
                sock_tx.sendto(data, (udp_stream["ip"], udp_stream["port"]))


if __name__ == '__main__':
    main()

